!function(){"use strict";const t=self,e=16,s=80,o=15,n={type:0,light1:1,light2:2,light3:3,sunlight:4,count:5},l=new Map,a={light1:{r:1,g:1,b:1},light2:{r:1,g:1,b:1},light3:{r:1,g:1,b:1},sunlight:{r:1,g:1,b:1}};let h;const i=(t,e)=>({x:t,z:e,voxels:new Uint8ClampedArray(20480*n.count),heightmap:new Uint8ClampedArray(256),hasPropagated:!1}),r=(t,e)=>{const s=`${t}:${e}`;let o=l.get(s);return o||(o={...i(t,e),key:s},l.set(s,o)),o},c=(t,o,l)=>(t*e*s+o*e+l)*n.count,x=t=>(s,o)=>{let n=t;const l=s<0||s>=e?Math.floor(s/e):0,a=o<0||o>=e?Math.floor(o/e):0;return(l||a)&&(n=r(t.x+l,t.z+a),s-=e*l,o-=e*a),{chunk:n,cx:s,cz:o}},u=[{x:1,y:0,z:0},{x:-1,y:0,z:0},{x:0,y:0,z:1},{x:0,y:0,z:-1},{x:0,y:1,z:0},{x:0,y:-1,z:0}],g=(t,l,a)=>{const i=x(t),r="sunlight"===a;for(;l.length;){const{x:t,y:x,z:g}=l.shift(),{chunk:p,cx:f,cz:y}=i(t,g),z=p.voxels[c(f,x,y)+n[a]];u.forEach((u=>{const p=x+u.y;if(p<0||p>=s)return;const f=t+u.x,y=g+u.z,m=z-(r&&-1===u.y&&z===o?0:1),{chunk:d,cx:v,cz:M}=i(f,y),b=c(v,p,M);var k;(k=d.voxels[b],!h[k].isTranslucent||r&&-1!==u.y&&z===o&&p>d.heightmap[v*e+M]||d.voxels[b+n[a]]>=m)||(d.voxels[b+n[a]]=m,l.push({x:f,y:p,z:y}))}))}},p=t=>{const l=[[],[],[]],a=[];for(let i=0;i<e;i+=1)for(let r=0;r<s;r+=1)for(let s=0;s<e;s+=1){const e=c(i,r,s),x=t.voxels[e];79===r&&h[x].isTranslucent?(t.voxels[e+n.sunlight]=o,a.push({x:i,y:79,z:s})):h[x].light&&(t.voxels[e+n[`light${h[x].light}`]]=o,l[h[x].light-1].push({x:i,y:r,z:s}))}g(t,l[0],"light1"),g(t,l[1],"light2"),g(t,l[2],"light3"),g(t,a,"sunlight"),t.hasPropagated=!0},f=(t,e,l,a,h)=>{const i=x(t),{chunk:r,cx:p,cz:f}=i(e,a),y=c(p,l,f),z=[],m=[];m.push({x:e,y:l,z:a,light:r.voxels[y+n[h]]}),r.voxels[y+n[h]]=0;const d="sunlight"===h;for(;m.length;){const{x:t,y:e,z:l,light:a}=m.shift();u.forEach((r=>{const x=e+r.y;if(x<0||x>=s)return;const u=t+r.x,g=l+r.z,{chunk:p,cx:f,cz:y}=i(u,g),v=c(f,x,y),M=p.voxels[v+n[h]];0!==M&&(M<a||d&&-1===r.y&&a===o&&M===o?(m.push({x:u,y:x,z:g,light:M}),p.voxels[v+n[h]]=0):M>=a&&z.push({x:u,y:x,z:g}))}))}g(t,z,h)},y=({x:t,y:l,z:a,type:i})=>{const p=r(Math.floor(t/e),Math.floor(a/e));t-=e*p.x,a-=e*p.z;const{heightmap:y,voxels:z,hasPropagated:m}=p,d=c(t,l,a),v=z[d];z[d]=i;const M=t*e+a,b=y[M];if(i===h.air){if(l===b)for(let e=l-1;e>=0;e-=1)if(0===e||0!==z[c(t,e,a)]){y[M]=e;break}}else b<l&&(y[M]=l);if(m)if(h[v].light?f(p,t,l,a,`light${h[v].light}`):h[v].isTranslucent&&!h[i].isTranslucent&&["light1","light2","light3","sunlight"].forEach((e=>{0!==z[d+n[e]]&&f(p,t,l,a,e)})),h[i].light){const e=`light${h[i].light}`;z[d+n[e]]=o,g(p,[{x:t,y:l,z:a}],e)}else if(h[i].isTranslucent&&!h[v].isTranslucent){const e=x(p);["light1","light2","light3","sunlight"].forEach((i=>{const r=[];"sunlight"===i&&79===l?(z[d+n[i]]=o,r.push({x:t,y:l,z:a})):u.forEach((o=>{const x=l+o.y;if(x<0||x>=s)return;const u=t+o.x,g=a+o.z,{chunk:p,cx:f,cz:y}=e(u,g),z=c(f,x,y),{light:m,isTranslucent:d}=h[p.voxels[z]];0!==p.voxels[z+n[i]]&&(d||m&&"sunlight"!==i)&&r.push({x:u,y:x,z:g})})),g(p,r,i)}))}return p},z=(t,e,s,o,n=1)=>{const l=["r","g","b"].reduce(((l,h)=>(l[h]=Math.max(Math.min(t**2*a.light1[h]+e**2*a.light2[h]+s**2*a.light3[h]+o**2*a.sunlight[h],1),.02)*n,l)),{});return l.avg=(l.r+l.g+l.b)/3,l},m=({light1:t,light2:e,light3:s,sunlight:n},l)=>l.map((l=>{let a=h[l[0].type].hasAO,i=h[l[1].type].hasAO,r=a&&i||h[l[2].type].hasAO;const c=[a,i,r].reduce(((t,e)=>t-(e?.1:0)),1);let x=1,u=t,g=e,p=s,f=n;return a=h[l[0].type].isTranslucent,i=h[l[1].type].isTranslucent,r=(a||i)&&h[l[2].type].isTranslucent,[a,i,r].forEach(((t,e)=>{t&&(u+=l[e].light1,g+=l[e].light2,p+=l[e].light3,f+=l[e].sunlight,x+=1)})),u=u/x/o,g=g/x/o,p=p/x/o,f=f/x/o,z(u,g,p,f,c)})),d={top:{type:0,light1:0,light2:0,light3:0,sunlight:o},bottom:{type:0,light1:0,light2:0,light3:0,sunlight:0}},v=(t,e)=>(h[t].isGhost||!h[e].isGhost)&&(!h[t].isCulled||!h[e].isCulled||(h[e].hasAlpha||h[e].hasBlending)&&(!(h[t].hasAlpha||h[t].hasBlending)||t!==e)),M=[{x:-1,z:-1},{x:0,z:-1},{x:1,z:-1},{x:-1,z:0},{x:1,z:0},{x:-1,z:1},{x:0,z:1},{x:1,z:1}],b=1/18,k=17/18,A=new Map,$=(t,l)=>{const a=r(t,l);A.has(a.key)||A.set(a.key,a),a.hasPropagated||p(a),M.forEach((({x:t,z:e})=>{const s=r(a.x+t,a.z+e);s.hasPropagated||p(s)}));const i=(t=>{const e=x(t);return(t,o,l)=>{if(o<0)return d.bottom;if(o>=s)return d.top;const{chunk:a,cx:h,cz:i}=e(t,l),r=c(h,o,i);return{type:a.voxels[r],light1:a.voxels[r+n.light1],light2:a.voxels[r+n.light2],light3:a.voxels[r+n.light3],sunlight:a.voxels[r+n.sunlight]}}})(a);return[...Array(5)].map(((t,s)=>{const n=["alpha","blending","ghost","opaque"].reduce(((t,e)=>(t[e]={color:[],position:[],uv:[],index:[],offset:0},t)),{}),l=(t,e,s,o,l,a,i)=>{const r=h[l].textures[i%6],c=[[r.from,i+k],[r.to,i+k],[r.to,i+b],[r.from,i+b]],x=[t,e,s,o];a[0].avg+a[2].avg<a[1].avg+a[3].avg&&(a.unshift(a.pop()),c.unshift(c.pop()),x.unshift(x.pop()));let u=n.opaque;h[l].hasAlpha?u=n.alpha:h[l].hasBlending?u=n.blending:h[l].isGhost&&(u=n.ghost),a.forEach((t=>u.color.push(t.r,t.g,t.b))),c.forEach((t=>u.uv.push(...t))),x.forEach((t=>u.position.push(...t))),[0,1,2,2,3,0].forEach((t=>u.index.push(u.offset+t))),u.offset+=4},a=(t,e,s,o)=>{const n=i(t,e+1,s),a=i(t,e-1,s),h=i(t,e,s+1),r=i(t,e,s-1),c=i(t-1,e,s),x=i(t+1,e,s);if(v(o,n.type)){const a=i(t,e+1,s-1),h=i(t+1,e+1,s),r=i(t-1,e+1,s),c=i(t,e+1,s+1);l([t,e+1,s+1],[t+1,e+1,s+1],[t+1,e+1,s],[t,e+1,s],o,m(n,[[r,c,i(t-1,e+1,s+1)],[h,c,i(t+1,e+1,s+1)],[h,a,i(t+1,e+1,s-1)],[r,a,i(t-1,e+1,s-1)]]),0)}if(v(o,a.type)){const n=i(t,e-1,s-1),h=i(t+1,e-1,s),r=i(t-1,e-1,s),c=i(t,e-1,s+1);l([t,e,s],[t+1,e,s],[t+1,e,s+1],[t,e,s+1],o,m(a,[[r,n,i(t-1,e-1,s-1)],[h,n,i(t+1,e-1,s-1)],[h,c,i(t+1,e-1,s+1)],[r,c,i(t-1,e-1,s+1)]]),1)}if(v(o,h.type)){const n=i(t+1,e,s+1),a=i(t-1,e,s+1),r=i(t,e+1,s+1),c=i(t,e-1,s+1);l([t,e,s+1],[t+1,e,s+1],[t+1,e+1,s+1],[t,e+1,s+1],o,m(h,[[a,c,i(t-1,e-1,s+1)],[n,c,i(t+1,e-1,s+1)],[n,r,i(t+1,e+1,s+1)],[a,r,i(t-1,e+1,s+1)]]),2)}if(v(o,r.type)){const n=i(t+1,e,s-1),a=i(t-1,e,s-1),h=i(t,e+1,s-1),c=i(t,e-1,s-1);l([t+1,e,s],[t,e,s],[t,e+1,s],[t+1,e+1,s],o,m(r,[[n,c,i(t+1,e-1,s-1)],[a,c,i(t-1,e-1,s-1)],[a,h,i(t-1,e+1,s-1)],[n,h,i(t+1,e+1,s-1)]]),3)}if(v(o,c.type)){const n=i(t-1,e,s-1),a=i(t-1,e,s+1),h=i(t-1,e+1,s),r=i(t-1,e-1,s);l([t,e,s],[t,e,s+1],[t,e+1,s+1],[t,e+1,s],o,m(c,[[n,r,i(t-1,e-1,s-1)],[a,r,i(t-1,e-1,s+1)],[a,h,i(t-1,e+1,s+1)],[n,h,i(t-1,e+1,s-1)]]),4)}if(v(o,x.type)){const n=i(t+1,e,s-1),a=i(t+1,e,s+1),h=i(t+1,e+1,s),r=i(t+1,e-1,s);l([t+1,e,s+1],[t+1,e,s],[t+1,e+1,s],[t+1,e+1,s+1],o,m(x,[[a,r,i(t+1,e-1,s+1)],[n,r,i(t+1,e-1,s-1)],[n,h,i(t+1,e+1,s-1)],[a,h,i(t+1,e+1,s+1)]]),5)}},r=(t,e,s,{type:n,light1:a,light2:h,light3:i,sunlight:r},c)=>{const x=(()=>{const t=z(a/o,h/o,i/o,r/o);return[...Array(4)].map((()=>t))})();l([t,e,s],[t+1,e,s+1],[t+1,e+1,s+1],[t,e+1,s],n,x,6),l([t,e,s+1],[t+1,e,s],[t+1,e+1,s],[t,e+1,s+1],n,x,6),c&&(l([t+1,e,s+1],[t,e,s],[t,e+1,s],[t+1,e+1,s+1],n,x,6),l([t+1,e,s],[t,e,s+1],[t,e+1,s+1],[t+1,e+1,s],n,x,6))},c=s*e,x=(s+1)*e;for(let t=0;t<e;t+=1)for(let s=c;s<x;s+=1)for(let o=0;o<e;o+=1){const e=i(t,s,o);if(0!==e.type)switch(h[e.type].model){case"cross":r(t,s,o,e,!h[e.type].hasAlpha);break;default:a(t,s,o,e.type)}}return["alpha","blending","ghost","opaque"].reduce(((t,e)=>{const{color:s,position:o,uv:l,index:a}=n[e];return t[e]={color:new Float32Array(s),position:new Uint8Array(o),uv:new Float32Array(l),index:new Uint16Array(a)},t}),{})}))},E=(()=>{let e;const s=new Map,o=()=>{[...s.values()].forEach((e=>((e,s)=>{const o=$(e,s);t.postMessage({type:"chunk",position:{x:e,z:s},subchunks:o},o.reduce(((t,e)=>(["alpha","blending","ghost","opaque"].forEach((s=>{s=e[s],t.push(s.color.buffer,s.position.buffer,s.uv.buffer,s.index.buffer)})),t)),[]))})(e.x,e.z))),s.clear()};return(t,n)=>{s.set(`${t}:${n}`,{x:t,z:n}),e&&clearTimeout(e),e=setTimeout(o,0)}})(),C=()=>{const t=[...A.values()];t.length?t.forEach((t=>E(t.x,t.z))):E(0,0)},T=({offset:t={x:0,y:0,z:0}})=>{const s=(t,s,l)=>{const a=`${Math.floor(t/e)}:${Math.floor(l/e)}`,i=A.get(a);if(!i)return!1;t-=e*i.x,l-=e*i.z;const r=c(t,s,l);return!!h[i.voxels[r]].isTranslucent&&[Math.floor(i.voxels[r+n.light1]/o*255),Math.floor(i.voxels[r+n.light2]/o*255),Math.floor(i.voxels[r+n.light3]/o*255),Math.floor(i.voxels[r+n.sunlight]/o*255)]},{min:l,max:i}=[...A.values()].reduce((({min:t,max:s},{x:o,z:n,heightmap:l})=>{const a=l.reduce(((t,e)=>Math.max(t,e)),0);return{min:{x:Math.min(t.x,o*e),y:0,z:Math.min(t.z,n*e)},max:{x:Math.max(s.x,(o+1)*e),y:Math.max(s.y,a),z:Math.max(s.z,(n+1)*e)}}}),{min:{x:1/0,y:0,z:1/0},max:{x:-1/0,y:0,z:-1/0}});i.y=Math.ceil((i.y+8)/e)*e;const r={x:i.x-l.x,y:i.y-l.y,z:i.z-l.z},x=Array(r.x*r.y*r.z*4);for(let t=l.z,e=0;t<i.z;t+=1)for(let o=l.y;o<i.y;o+=1)for(let n=l.x;n<i.x;n+=1,e+=4){const l=s(n,o,t);for(let t=0;t<4;t+=1)x[e+t]=String.fromCharCode(l?l[t]:0)}return{channels:[a.light1,a.light2,a.light3,a.sunlight],data:btoa(x.join("")),origin:{x:l.x+t.x,y:l.y+t.y,z:l.z+t.z},size:r}},w=({includeGhost:t=!0,offset:o={x:0,y:0,z:0}})=>{const n=(o,n,l)=>{if(n<0||n>=s)return!1;const a=`${Math.floor(o/e)}:${Math.floor(l/e)}`,i=A.get(a);if(!i)return!1;o-=e*i.x,l-=e*i.z;const r=i.voxels[c(o,n,l)];return 0!==r&&(t||!h[r].isGhost)&&!h[r].isTranslucent},{min:l,max:a}=[...A.values()].reduce((({min:t,max:s},{x:o,z:n,heightmap:l})=>{const a=l.reduce(((t,e)=>Math.max(t,e)),0);return{min:{x:Math.min(t.x,o*e),y:0,z:Math.min(t.z,n*e)},max:{x:Math.max(s.x,(o+1)*e),y:Math.max(s.y,a),z:Math.max(s.z,(n+1)*e)}}}),{min:{x:1/0,y:0,z:1/0},max:{x:-1/0,y:0,z:-1/0}});a.y=Math.ceil((a.y+8)/e)*e;const i={x:a.x-l.x,y:a.y-l.y,z:a.z-l.z},r=Array(i.x*i.y*i.z);for(let t=l.z,e=0;t<a.z;t+=1)for(let s=l.y;s<a.y;s+=1)for(let o=l.x;o<a.x;o+=1,e+=1)r[e]=String.fromCharCode(n(o,s,t)?255:0);return{data:btoa(r.join("")),origin:{x:l.x+o.x,y:l.y+o.y,z:l.z+o.z},size:i}},G=({includeAlpha:t=!1,includeGhost:o=!0,offset:n={x:0,y:0,z:0}})=>{const l=(n,l,a)=>{if(l<0||l>=s)return!1;const i=`${Math.floor(n/e)}:${Math.floor(a/e)}`,r=A.get(i);if(!r)return!1;n-=e*r.x,a-=e*r.z;const x=r.voxels[c(n,l,a)];return 0!==x&&(o||!h[x].isGhost)&&(t||!h[x].hasAlpha)},{min:a,max:i}=[...A.values()].reduce((({min:t,max:s},{x:o,z:n})=>({min:{x:Math.min(t.x,o*e),z:Math.min(t.z,n*e)},max:{x:Math.max(s.x,(o+1)*e),z:Math.max(s.z,(n+1)*e)}})),{min:{x:1/0,z:1/0},max:{x:-1/0,z:-1/0}}),r=[],x=new Map;for(let t=a.x;t<i.x;t+=1)for(let e=0;e<s;e+=1)for(let o=a.z;o<i.z;o+=1)if(l(t,e,o)&&!x.has(`${t}:${e}:${o}`)){const n={position:{x:t,y:e,z:o},size:{x:0,y:0,z:0}};r.push(n);for(let s=t+1;s<=i.x;s+=1)if(!l(s,e,o)||x.has(`${s}:${e}:${o}`)){n.size.x=s-t;break}n.size.y=s-e;for(let s=t;s<t+n.size.x;s+=1)for(let t=e+1;t<=e+n.size.y;t+=1)l(s,t,o)&&!x.has(`${s}:${t}:${o}`)||(n.size.y=t-e);n.size.z=i.z-o;for(let s=t;s<t+n.size.x;s+=1)for(let t=e;t<e+n.size.y;t+=1)for(let e=o+1;e<=o+n.size.z;e+=1)l(s,t,e)&&!x.has(`${s}:${t}:${e}`)||(n.size.z=e-o);for(let s=t;s<t+n.size.x;s+=1)for(let t=e;t<e+n.size.y;t+=1)for(let e=o;e<o+n.size.z;e+=1)x.set(`${s}:${t}:${e}`,!0)}return r.map((({position:t,size:e})=>[[t.x+n.x,t.y+n.y,t.z+n.z],[e.x,e.y,e.z]]))};t.addEventListener("message",(({data:i})=>{switch(i.type){case"types":{const t=h,e={alpha:0,blending:0,opaque:0};if(h=[{name:"Air",isTranslucent:!0},...i.types.map((t=>{let s="opaque";t.hasAlpha?s="alpha":t.hasBlending&&(s="blending");const o="cross"===t.model,n=e[s];return t.isGhost||(e[s]+=o?1:3),{...t,hasAO:!o,isCulled:!o,isTranslucent:o||t.hasAlpha||t.hasBlending,textures:o?[n]:[n,n+2,n+1,n+1,n+1,n+1]}})).map((t=>({...t,textures:t.textures.map((s=>{let o="opaque";t.hasAlpha?o="alpha":t.hasBlending&&(o="blending");const n=1/Math.max(e[o],9),l=n/18,a=s*n+l;return{from:a,to:a+16*l}}))}))),{name:"Bedrock",hasAO:!0,isCulled:!0,isTranslucent:!1}],d.bottom.type=h.length-1,t){let e=!1,s=!1;if(h.length<t.length)e=!0,s=t.map((({key:t})=>{if(!t)return 0;const e=h.findIndex((({key:e})=>e===t));return~e?e:0}));else{const s=t.length;for(let o=0;o<s;o+=1){const s=t[o],n=h[o];if(s.model!==n.model||s.hasAlpha!==n.hasAlpha||s.hasBlending!==n.hasBlending||s.isGhost!==n.isGhost||s.light!==n.light){e=!0;break}}}e&&([...l.values()].forEach((({key:t})=>{A.has(t)||l.delete(t)})),[...A.values()].forEach((t=>{const{voxels:e}=t,{length:l}=e;for(let t=0;t<l;t+=n.count){s&&(e[t]=s[e[t]]);const{light:l}=h[e[t]];e[t+n.light1]=1===l?o:0,e[t+n.light2]=2===l?o:0,e[t+n.light3]=3===l?o:0,e[t+n.sunlight]=0}t.hasPropagated=!1})))}C();break}case"lighting":a.light1=i.channels.channel1,a.light2=i.channels.channel2,a.light3=i.channels.channel3,a.sunlight=i.channels.sunlight,C();break;case"clone":if(i.from.y>=0&&i.from.y<s&&i.to.y>=0&&i.to.y<s){const t=(({x:t,y:s,z:o},n)=>{const l=r(Math.floor(t/e),Math.floor(o/e));return t-=e*l.x,o-=e*l.z,y({...n,type:l.voxels[c(t,s,o)]})})(i.from,i.to);[t,...M.map((({x:e,z:s})=>({x:t.x+e,z:t.z+s})))].forEach((t=>E(t.x,t.z)))}break;case"update":if(i.update.y>=0&&i.update.y<s){const t=y(i.update);[t,...M.map((({x:e,z:s})=>({x:t.x+e,z:t.z+s})))].forEach((t=>E(t.x,t.z)))}break;case"pick":{const{block:o}=i;if(o.y>=0&&o.y<s){const s=r(Math.floor(o.x/e),Math.floor(o.z/e));o.x-=e*s.x,o.z-=e*s.z,t.postMessage({type:"pick",block:s.voxels[c(o.x,o.y,o.z)]})}break}case"load":l.clear(),A.clear(),h=void 0,i.chunks.forEach((({x:t,z:a,voxels:h})=>{const r=`${t}:${a}`,c=new Uint8ClampedArray(atob(h).split("").map((t=>t.charCodeAt(0)))),x=new Uint8ClampedArray(20480*n.count),u=new Uint8ClampedArray(256);for(let t=0,l=0,a=0;t<e;t+=1)for(let h=0;h<s;h+=1)for(let s=0;s<e;s+=1,l+=n.count,a+=1){const r=c[a];if(x[l]=r,0!==r){const a=t*e+s;u[a]<h&&(u[a]=h);const{light:c}=i.types[r-1];c&&(x[l+n[`light${c}`]]=o)}}const g={x:t,z:a,voxels:x,heightmap:u,hasPropagated:!1,key:r};l.set(r,g),A.set(r,g)}));break;case"save":t.postMessage({type:"save",chunks:[...A.values()].map((({x:t,z:e,voxels:s})=>{const o=new Uint8ClampedArray(20480),{length:l}=s;for(let t=0,e=0;t<l;t+=1,e+=n.count)o[t]=s[e];return{x:t,z:e,voxels:btoa(String.fromCharCode.apply(null,o))}}))});break;case"computeLightmap":t.postMessage({type:"lightmap",lightmap:T(i)});break;case"computeOcclusion":t.postMessage({type:"occlusion",occlusion:w(i)});break;case"computePhysics":t.postMessage({type:"physics",boxes:G(i)});break;case"reset":l.clear(),A.clear()}}))}();
//# sourceMappingURL=blocks.worker.js.map
