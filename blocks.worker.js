!function(){"use strict";const t=self,e=16,s=80,n=15,o={type:0,light:1,sunlight:2,count:3},r=new Map;let a,c=1;const l=(t,e)=>({x:t,z:e,voxels:new Uint8ClampedArray(20480*o.count),heightmap:new Uint8ClampedArray(256),hasPropagated:!1}),i=(t,e)=>{const s=`${t}:${e}`;let n=r.get(s);return n||(n={...l(t,e),key:s},r.set(s,n)),n},h=(t,n,r)=>(t*e*s+n*e+r)*o.count,u=t=>(s,n)=>{let o=t;const r=s<0||s>=e?Math.floor(s/e):0,a=n<0||n>=e?Math.floor(n/e):0;return(r||a)&&(o=i(t.x+r,t.z+a),s-=e*r,n-=e*a),{chunk:o,cx:s,cz:n}},p=[{x:1,y:0,z:0},{x:-1,y:0,z:0},{x:0,y:0,z:1},{x:0,y:0,z:-1},{x:0,y:1,z:0},{x:0,y:-1,z:0}],x=(t,r,c="light")=>{const l=u(t),i="sunlight"===c;for(;r.length;){const{x:t,y:u,z:x}=r.shift(),{chunk:f,cx:y,cz:g}=l(t,x),z=f.voxels[h(y,u,g)+o[c]];p.forEach((p=>{const f=u+p.y;if(f<0||f>=s)return;const y=t+p.x,g=x+p.z,d=z-(i&&-1===p.y&&z===n?0:1),{chunk:m,cx:v,cz:k}=l(y,g),T=h(v,f,k);var E;(E=m.voxels[T],!a[E].isTranslucent||i&&-1!==p.y&&z===n&&f>m.heightmap[v*e+k]||m.voxels[T+o[c]]>=d)||(m.voxels[T+o[c]]=d,r.push({x:y,y:f,z:g}))}))}},f=t=>{const r=[],c=[];for(let l=0;l<e;l+=1)for(let i=0;i<s;i+=1)for(let s=0;s<e;s+=1){const e=h(l,i,s),u=t.voxels[e];79===i&&a[u].isTranslucent?(t.voxels[e+o.sunlight]=n,c.push({x:l,y:79,z:s})):a[u].isLight&&(t.voxels[e+o.light]=n,r.push({x:l,y:i,z:s}))}x(t,r,"light"),x(t,c,"sunlight"),t.hasPropagated=!0},y=(t,e,r,a,c="light")=>{const l=u(t),{chunk:i,cx:f,cz:y}=l(e,a),g=h(f,r,y),z=[],d=[];d.push({x:e,y:r,z:a,light:i.voxels[g+o[c]]}),i.voxels[g+o[c]]=0;const m="sunlight"===c;for(;d.length;){const{x:t,y:e,z:r,light:a}=d.shift();p.forEach((i=>{const u=e+i.y;if(u<0||u>=s)return;const p=t+i.x,x=r+i.z,{chunk:f,cx:y,cz:g}=l(p,x),v=h(y,u,g),k=f.voxels[v+o[c]];0!==k&&(k<a||m&&-1===i.y&&a===n&&k===n?(d.push({x:p,y:u,z:x,light:k}),f.voxels[v+o[c]]=0):k>=a&&z.push({x:p,y:u,z:x}))}))}x(t,z,c)},g=({light:t,sunlight:e},s)=>s.map((s=>{let o=a[s[0].type].hasAO,r=a[s[1].type].hasAO,l=o&&r||a[s[2].type].hasAO;const i=[o,r,l].reduce(((t,e)=>t-(e?.2:0)),1);let h=1,u=t,p=e;return o=a[s[0].type].isTranslucent,r=a[s[1].type].isTranslucent,l=(o||r)&&a[s[2].type].isTranslucent,[o,r,l].forEach(((t,e)=>{t&&(u+=s[e].light,p+=s[e].sunlight,h+=1)})),Math.max(Math.max(u,p*c)/h/n,.05)*i})),z={type:0,light:0,sunlight:n},d=(t,e)=>!a[t].isCulled||!a[e].isCulled||a[e].isTransparent&&(!a[t].isTransparent||t!==e),m=[{x:-1,z:-1},{x:0,z:-1},{x:1,z:-1},{x:-1,z:0},{x:1,z:0},{x:-1,z:1},{x:0,z:1},{x:1,z:1}],v=1/18,k=17/18,T=new Map,E=(t,r)=>{const l=i(t,r);T.has(l.key)||T.set(l.key,l),l.hasPropagated||f(l),m.forEach((({x:t,z:e})=>{const s=i(l.x+t,l.z+e);s.hasPropagated||f(s)}));const p=(t=>{const e=u(t);return(t,n,r)=>{if(n<0||n>=s)return z;const{chunk:a,cx:c,cz:l}=e(t,r),i=h(c,n,l);return{type:a.voxels[i],light:a.voxels[i+o.light],sunlight:a.voxels[i+o.sunlight]}}})(l);return[...Array(5)].map(((t,s)=>{const o={opaque:{color:[],position:[],uv:[],index:[],offset:0},transparent:{color:[],position:[],uv:[],index:[],offset:0}},r=(t,e,s,n,r,c,l)=>{const i=a[r].textures[l%6],h=[[i.from,l+k],[i.to,l+k],[i.to,l+v],[i.from,l+v]],u=[t,e,s,n];c[0]+c[2]<c[1]+c[3]&&(c.unshift(c.pop()),h.unshift(h.pop()),u.unshift(u.pop()));const p=a[r].isTransparent?o.transparent:o.opaque;c.forEach((t=>p.color.push(t,t,t))),h.forEach((t=>p.uv.push(...t))),u.forEach((t=>p.position.push(...t))),[0,1,2,2,3,0].forEach((t=>p.index.push(p.offset+t))),p.offset+=4},l=(t,e,s,n)=>{const o=p(t,e+1,s),a=p(t,e-1,s),c=p(t,e,s+1),l=p(t,e,s-1),i=p(t-1,e,s),h=p(t+1,e,s);if(d(n,o.type)){const a=p(t,e+1,s-1),c=p(t+1,e+1,s),l=p(t-1,e+1,s),i=p(t,e+1,s+1);r([t,e+1,s+1],[t+1,e+1,s+1],[t+1,e+1,s],[t,e+1,s],n,g(o,[[l,i,p(t-1,e+1,s+1)],[c,i,p(t+1,e+1,s+1)],[c,a,p(t+1,e+1,s-1)],[l,a,p(t-1,e+1,s-1)]]),0)}if(d(n,a.type)){const o=p(t,e-1,s-1),c=p(t+1,e-1,s),l=p(t-1,e-1,s),i=p(t,e-1,s+1);r([t,e,s],[t+1,e,s],[t+1,e,s+1],[t,e,s+1],n,g(a,[[l,o,p(t-1,e-1,s-1)],[c,o,p(t+1,e-1,s-1)],[c,i,p(t+1,e-1,s+1)],[l,i,p(t-1,e-1,s+1)]]),1)}if(d(n,c.type)){const o=p(t+1,e,s+1),a=p(t-1,e,s+1),l=p(t,e+1,s+1),i=p(t,e-1,s+1);r([t,e,s+1],[t+1,e,s+1],[t+1,e+1,s+1],[t,e+1,s+1],n,g(c,[[a,i,p(t-1,e-1,s+1)],[o,i,p(t+1,e-1,s+1)],[o,l,p(t+1,e+1,s+1)],[a,l,p(t-1,e+1,s+1)]]),2)}if(d(n,l.type)){const o=p(t+1,e,s-1),a=p(t-1,e,s-1),c=p(t,e+1,s-1),i=p(t,e-1,s-1);r([t+1,e,s],[t,e,s],[t,e+1,s],[t+1,e+1,s],n,g(l,[[o,i,p(t+1,e-1,s-1)],[a,i,p(t-1,e-1,s-1)],[a,c,p(t-1,e+1,s-1)],[o,c,p(t+1,e+1,s-1)]]),3)}if(d(n,i.type)){const o=p(t-1,e,s-1),a=p(t-1,e,s+1),c=p(t-1,e+1,s),l=p(t-1,e-1,s);r([t,e,s],[t,e,s+1],[t,e+1,s+1],[t,e+1,s],n,g(i,[[o,l,p(t-1,e-1,s-1)],[a,l,p(t-1,e-1,s+1)],[a,c,p(t-1,e+1,s+1)],[o,c,p(t-1,e+1,s-1)]]),4)}if(d(n,h.type)){const o=p(t+1,e,s-1),a=p(t+1,e,s+1),c=p(t+1,e+1,s),l=p(t+1,e-1,s);r([t+1,e,s+1],[t+1,e,s],[t+1,e+1,s],[t+1,e+1,s+1],n,g(h,[[a,l,p(t+1,e-1,s+1)],[o,l,p(t+1,e-1,s-1)],[o,c,p(t+1,e+1,s-1)],[a,c,p(t+1,e+1,s+1)]]),5)}},i=(t,e,s,{type:o,light:a,sunlight:l})=>{const i=(()=>{const t=Math.max(Math.max(a,l*c)/n,.05);return[...Array(4)].map((()=>t))})();r([t,e,s],[t+1,e,s+1],[t+1,e+1,s+1],[t,e+1,s],o,i,6),r([t,e,s+1],[t+1,e,s],[t+1,e+1,s],[t,e+1,s+1],o,i,6),r([t+1,e,s+1],[t,e,s],[t,e+1,s],[t+1,e+1,s+1],o,i,6),r([t+1,e,s],[t,e,s+1],[t,e+1,s+1],[t+1,e+1,s],o,i,6)},h=s*e,u=(s+1)*e;for(let t=0;t<e;t+=1)for(let s=h;s<u;s+=1)for(let n=0;n<e;n+=1){const e=p(t,s,n);if(0!==e.type)switch(a[e.type].model){case"cross":i(t,s,n,e);break;default:l(t,s,n,e.type)}}return["opaque","transparent"].reduce(((t,e)=>{const{color:s,position:n,uv:r,index:a}=o[e];return t[e]={color:new Float32Array(s),position:new Uint8Array(n),uv:new Float32Array(r),index:new Uint16Array(a)},t}),{})}))},b=(e,s)=>{const n=E(e,s);t.postMessage({type:"chunk",position:{x:e,z:s},subchunks:n},n.reduce(((t,e)=>(["opaque","transparent"].forEach((s=>{s=e[s],t.push(s.color.buffer,s.position.buffer,s.uv.buffer,s.index.buffer)})),t)),[]))},A=(()=>{let t;const e=new Map,s=()=>{[...e.values()].forEach((t=>b(t.x,t.z))),e.clear()};return(n,o)=>{e.set(`${n}:${o}`,{x:n,z:o}),t&&clearTimeout(t),t=setTimeout(s,0)}})(),M=(()=>{let t;const e=()=>{const t=[...T.values()];t.length?t.forEach((t=>b(t.x,t.z))):b(0,0)};return()=>{t&&clearTimeout(t),t=setTimeout(e,0)}})();t.addEventListener("message",(({data:l})=>{switch(l.type){case"types":{const t=a,e={opaque:0,transparent:0};if(a=[{name:"Air",isLight:!1,isTranslucent:!0},...l.types.map((t=>{const s=t.isTransparent?"transparent":"opaque",n=e[s];return e[s]+=3,{...t,hasAO:"cross"!==t.model,isCulled:"cross"!==t.model,isTranslucent:t.isTransparent||"cross"===t.model,textures:[n+2,n,n+1,n+1,n+1,n+1]}})).map((t=>({...t,textures:t.textures.map((s=>{const n=1/e[t.isTransparent?"transparent":"opaque"],o=n/18,r=s*n+o;return{from:r,to:r+16*o}}))})))],t){let e=!1,s=!1;if(a.length<t.length)e=!0,s=t.map((({key:t})=>{if(!t)return 0;const e=a.findIndex((({key:e})=>e===t));return~e?e:0}));else{const s=t.length;for(let n=0;n<s;n+=1){const s=t[n],o=a[n];if(s.model!==o.model||s.isLight!==o.isLight||s.isTransparent!==o.isTransparent){e=!0;break}}}e&&([...r.values()].forEach((({key:t})=>{T.has(t)||r.delete(t)})),[...T.values()].forEach((t=>{const{voxels:e}=t,{length:r}=e;for(let t=0;t<r;t+=o.count)s&&(e[t]=s[e[t]]),e[t+o.light]=a[e[t]].isLight?n:0,e[t+o.sunlight]=0;t.hasPropagated=!1})))}M();break}case"sunlight":c=l.intensity,M();break;case"update":if(l.update.y>0&&l.update.y<s){const t=(({x:t,y:r,z:c,type:l})=>{const f=i(Math.floor(t/e),Math.floor(c/e));t-=e*f.x,c-=e*f.z;const{heightmap:g,voxels:z,hasPropagated:d}=f,m=h(t,r,c),v=z[m];z[m]=l;const k=t*e+c,T=g[k];if(l===a.air){if(r===T)for(let e=r-1;e>=0;e-=1)if(0===e||0!==z[h(t,e,c)]){g[k]=e;break}}else T<r&&(g[k]=r);if(d)if(a[v].isLight?y(f,t,r,c):a[v].isTranslucent&&!a[l].isTranslucent&&["light","sunlight"].forEach((e=>{0!==z[m+o[e]]&&y(f,t,r,c,e)})),a[l].isLight)z[m+o.light]=n,x(f,[{x:t,y:r,z:c}]);else if(a[l].isTranslucent&&!a[v].isTranslucent){const e=u(f);["light","sunlight"].forEach((l=>{const i=[];"sunlight"===l&&79===r?(z[m+o[l]]=n,i.push({x:t,y:r,z:c})):p.forEach((n=>{const u=r+n.y;if(u<0||u>=s)return;const p=t+n.x,x=c+n.z,{chunk:f,cx:y,cz:g}=e(p,x),z=h(y,u,g),{isLight:d,isTranslucent:m}=a[f.voxels[z]];0!==f.voxels[z+o[l]]&&(m||d&&"light"===l)&&i.push({x:p,y:u,z:x})})),x(f,i,l)}))}return f})(l.update);[t,...m.map((({x:e,z:s})=>({x:t.x+e,z:t.z+s})))].forEach((t=>A(t.x,t.z)))}break;case"pick":{const{block:n}=l;if(n.y>0&&n.y<s){const s=i(Math.floor(n.x/e),Math.floor(n.z/e));n.x-=e*s.x,n.z-=e*s.z,t.postMessage({type:"pick",block:s.voxels[h(n.x,n.y,n.z)]})}break}case"load":r.clear(),T.clear(),a=void 0,l.chunks.forEach((({x:t,z:a,voxels:c})=>{const i=`${t}:${a}`,h=new Uint8ClampedArray(atob(c).split("").map((t=>t.charCodeAt(0)))),u=new Uint8ClampedArray(20480*o.count),p=new Uint8ClampedArray(256);for(let t=0,r=0,a=0;t<e;t+=1)for(let c=0;c<s;c+=1)for(let s=0;s<e;s+=1,r+=o.count,a+=1){const i=h[a];if(u[r]=i,0!==i){const a=t*e+s;p[a]<c&&(p[a]=c),l.types[i-1].isLight&&(u[r+o.light]=n)}}const x={x:t,z:a,voxels:u,heightmap:p,hasPropagated:!1,key:i};r.set(i,x),T.set(i,x)}));break;case"save":t.postMessage({type:"save",chunks:[...T.values()].map((({x:t,z:e,voxels:s})=>{const n=new Uint8ClampedArray(20480),{length:r}=s;for(let t=0,e=0;t<r;t+=1,e+=o.count)n[t]=s[e];return{x:t,z:e,voxels:btoa(String.fromCharCode.apply(null,n))}}))});break;case"reset":r.clear(),T.clear()}}))}();
//# sourceMappingURL=blocks.worker.js.map
